FROM ez4mcs/seed AS seed

FROM seed as git
RUN apt-get -qq update \
&& apt-get -qq install \
git \
sudo \
&& apt-get clean

FROM git as jq
RUN apt-get install -y jq \
&& apt-get clean

FROM jq as secureuser
ARG gituser
ARG HOMEDIR=$HOMEDIR
ARG THISUSER=$gituser

ARG USERHOME=$HOMEDIR/$THISUSER
ARG KNOWN_HOSTS=$USERHOME/.ssh/known_hosts

ARG SSH_PRIVATE_KEY_PATH=$USERHOME/.ssh
ARG SSH_PRIVATE_KEY
ARG FULL_PATH_TO_SSH_PRIVATE_KEY=$SSH_PRIVATE_KEY_PATH/$SSH_PRIVATE_KEY

RUN groupadd -g 1000 $THISUSER 
RUN useradd -d $USERHOME -s /bin/bash -m $THISUSER -u 1000 -g 1000 
RUN echo "ALL ALL=(ALL) NOPASSWD: ALL"\
>>/etc/sudoers
COPY assets.docker/known_hosts $KNOWN_HOSTS
# RUN --mount=type=secret,id=<REPLACE_WITH_KEY_NAME> cat /run/secrets/$SSH_PRIVATE_KEY > $FULL_PATH_TO_SSH_PRIVATE_KEY
RUN --mount=type=secret,id=KJKPX83ZX37RQN6YMITPQAH3 cat /run/secrets/$SSH_PRIVATE_KEY > $FULL_PATH_TO_SSH_PRIVATE_KEY

FROM secureuser as gituser
ENV GIT_SSH=$USERHOME/bin/git-ssh
ARG GIT_CONFIG=$USERHOME/.gitconfig
ARG GIT_IGNORE_GLOBAL=$USERHOME/.gitignore_global

COPY assets.docker/git-ssh $GIT_SSH
COPY assets.docker/.gitconfig $GIT_CONFIG
COPY assets.docker/.gitignore_global $GIT_IGNORE_GLOBAL

RUN chmod 700 $USERHOME/.ssh \
&& chmod 755 $USERHOME/bin \
&& chmod 755 $GIT_SSH \
&& chmod 600 $KNOWN_HOSTS \
&& chmod 644 $GIT_CONFIG \
&& chmod 644 $GIT_IGNORE_GLOBAL

ARG gitlogin
ARG THISLOGIN=$gitlogin
ARG LOCALHOMESAFE
ARG SAFEPATH=\\$HOMEDIR
ARG SAFEHOME=$SAFEPATH\\/$THISUSER
#RUN sed -i 's/'$LOCALHOMESAFE'/'$SAFEHOME'/' $GIT_CONFIG
RUN chmod 600 $SSH_PRIVATE_KEY_PATH/$SSH_PRIVATE_KEY 
RUN chown -R $THISUSER:$THISUSER $USERHOME

ARG GITUSER=$USERHOME/.ssh/GITUSER
ENV GITUSER=$GITUSER
COPY assets.docker/GITUSER $GITUSER
RUN chown $THISUSER:$THISUSER $GITUSER \
&& chmod 600 $GITUSER

ARG GITLOGIN=$USERHOME/.ssh/GITLOGIN
ENV GITLOGIN=$GITLOGIN
COPY assets.docker/GITLOGIN $GITLOGIN
RUN chown $THISUSER:$THISUSER $GITLOGIN \
&& chmod 600 $GITLOGIN

ARG GITTOKEN=$USERHOME/.ssh/GITTOKEN
ENV GITTOKEN=$GITTOKEN
COPY assets.docker/GITTOKEN $GITTOKEN
RUN chown $THISUSER:$THISUSER $GITTOKEN \
&& chmod 600 $GITTOKEN

ARG DOCKERHUBUSER=$USERHOME/.ssh/DOCKERHUBUSER
ENV DOCKERHUBUSER=$DOCKERHUBUSER
COPY assets.docker/DOCKERHUBUSER $DOCKERHUBUSER
ARG DOCKERHUBTOKEN=$USERHOME/.ssh/DOCKERHUBTOKEN
ENV DOCKERHUBTOKEN=$DOCKERHUBTOKEN
COPY assets.docker/DOCKERHUBTOKEN $DOCKERHUBTOKEN

RUN sudo chown $THISUSER:$THISUSER $DOCKERHUBUSER \
&& sudo chmod 600 $DOCKERHUBUSER \
&& sudo chown $THISUSER:$THISUSER $DOCKERHUBTOKEN \
&& sudo chmod 600 $DOCKERHUBTOKEN

FROM gituser as user
ARG THISUSER=$gituser
ARG HOMEDIR=$HOMEDIR
ARG USERHOME=$HOMEDIR/$THISUSER

USER $THISUSER

RUN echo '### USER STUFF ###\n\
alias ls="ls -Altr --color=auto"\n\
export PS1="\\[\\033[1;34m\\]\\u\\[\\033[0m\\]@\\[\\033[1;31m\\]\\h:\\[\\033[0;37m\\]\\w\\[\\033[1;301m\\]\\$\\[\\033[0m\\] " \n\
'\
>>$USERHOME/.bashrc

FROM user as bashhistory
ARG DOCKER_ENV
ENV DOCKER_ENV=$DOCKER_ENV
RUN echo '### PERSIST HISTORY ###\n\
if touch ${HOME}/history/${DOCKER_ENV}.history;then export HISTFILE="${HOME}/history/${DOCKER_ENV}.history" && green "Persistent history at:" && echo ${HISTFILE};else grey History not persistent;fi \n\
'\
>>$USERHOME/.bashrc


FROM bashhistory as end4
RUN echo '\n\
function unindex { /usr/bin/git update-index --skip-worktree "${*}"; }\n\
function reindex { /usr/bin/git update-index --no-skip-worktree "${*}"; }\n\
'\
>>$USERHOME/.bashrc

RUN sudo apt-get update -qq \
&& sudo apt-get clean